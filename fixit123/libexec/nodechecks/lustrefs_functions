# -*-Shell-script-*-
#
# lustrefs_functions     This file contains panasas functions to be used by most or all
#                     shell scripts in the nodechecks
#
###############################################################################
#    Copyright (2005) Sandia Corporation.  Under the terms of Contract
#    DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains
#    certain rights in this software
#
#    This file is part of Cbench.
#
#    Cbench is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    Cbench is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Cbench; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
###############################################################################

[ -x ${FIXIT123_HOME}/libexec/nodechecks/functions ] || exit 1;
. ${FIXIT123_HOME}/libexec/nodechecks/functions


check_lustrefs_software() {
	local lustrefs_version=$1
	local lustrefs_rpm=$2
	echo
	echo -n "Checking for lustre software $lustrefs_version: "
	rpm -q $lustrefs_rpm > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo_success
	else
		echo_failure
	fi
}

check_num_of_lustrefs_mounts() {
	local mnt_cnt=$1
	echo
	echo -n "Checking for $mnt_cnt Lustre mounts: "
	if [ `mount | grep lustre | wc -l` -ne $mnt_cnt ]; then
		echo_failure
	else
		echo_success
	fi
}

check_lustrefs_mount_option() {
		echo
		echo -n "Checking for proper lustre mount options: "
		grep lustre /etc/fstab > /dev/null 2>&1
		if [ $? -ne 0 ]; then
			echo_failure
		else
			echo_success
		fi
}

update_lustrefs_rpm() {
	local rpmlocation=$1
	rpm -Fvh $rpmlocation
}


