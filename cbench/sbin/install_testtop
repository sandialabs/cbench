#!/usr/bin/perl
# vim: syntax=perl tabstop=4
###############################################################################
#    Copyright (2005) Sandia Corporation.  Under the terms of Contract
#    DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains
#    certain rights in this software
#
#    This file is part of Cbench.
#
#    Cbench is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    Cbench is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Cbench; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
###############################################################################

# Script to install the top-level directory of the test set tree

# need to know where everything cbench lives!
$BENCH_HOME = $ENV{CBENCH_SOURCE_HOME} ? $ENV{CBENCH_SOURCE_HOME} : $ENV{CBENCHOME};
die "$BENCH_HOME not defined" if !defined $BENCH_HOME;

unshift @INC, "$BENCH_HOME";
require "cbench.pl";

$bench_test = get_bench_test();
#mkdir "$bench_test",0750;
system("mkdir -m 0750 -p $bench_test");

print "Installing core files to the Cbench test set tree ($bench_test)...\n";

# setup the list of things to install into the top of the cbench test tree and do it
@files = (
	"cbench.pl",
	"perllib",
	"sbin/start_jobs.pl",
	"sbin/gen_jobs.pl",
	"templates/$batch_method" . "_header.in",
	"templates/interactive_header.in",
	"templates/common\*.in",
	"templates/cbench_functions",
);

# only sync cluster.def if is the first time
if (! -f "$bench_test/cluster.def") {
	push (@files, "cluster.def");
} else {
	system ("diff -aurN $BENCH_HOME/cluster.def $bench_test/cluster.def > $bench_test/cluster.def.patch");
	print "The diff of cluster.def is in $bench_test/cluster.def.patch\n";
	sleep 2;
}
rsync_filelist(\@files,$bench_test);

# stuff to sync to CBENCHTEST/sbin
@files = (
	"sbin/get_*",
);
rsync_filelist(\@files,"$bench_test/sbin");

# sync all of tools to CBENCHTEST/tools
@files = (
	"tools/*",
);
rsync_filelist(\@files,"$bench_test/tools");

# create an init files that can be sourced
my $cbinitfile="$bench_test/cbench-init";
open (CBINIT, ">$cbinitfile.sh") or die "Can't create CBENCH INIT FILE $cbinitfile.sh $!";
print CBINIT #!/bin/sh
"CBENCHOME=$bench_test
CBENCHTEST=$bench_test
export CBENCHOME
export CBENCHTEST\n";
close (CBINIT);
open (CBINIT, ">$cbinitfile.csh") or die "Can't create CBENCH INIT FILE $cbinitfile.sh $!";
print CBINIT #!/bin/csh
"setenv CBENCHOME $bench_test
setenv CBENCHTEST $bench_test
\n";
close (CBINIT);
