#!/usr/bin/perl

# vim: syntax=perl tabstop=4
###############################################################################
#    Copyright (2005) Sandia Corporation.  Under the terms of Contract
#    DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains
#    certain rights in this software
#
#    This file is part of Cbench.
#
#    Cbench is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    Cbench is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Cbench; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
###############################################################################

# Script to install the 'lammps' Cbench test
# set and associated utility scripts.

# need to know where everything cbench lives!
$BENCH_HOME = $ENV{CBENCHOME} ? $ENV{CBENCHOME} :
    "$ENV{HOME}\/cbench";


# check for necessary environment variables
$ENV{LAMMPSDIR} or die "Error: Must set LAMMPSDIR environment variable to install LAMMPS (see doc/INSTALL)\n";
$ENV{LAMMPSMACHINE} or die "Error: Must set LAMMPSMACHINE environment variable to install LAMMPS (see doc/INSTALL)\n";

$machine = $ENV{LAMMPSMACHINE};
$lammps_dir = "$ENV{LAMMPSDIR}";

unshift @INC, "$BENCH_HOME";
require "cbench.pl";

# get the BENCH_TEST path from make.def
$bench_test = get_bench_test();
$testset = 'lammps';
$testset_path = "$bench_test/$testset";
$DEBUG and print "DEBUG: $bench_test $testset_path\n";

# build the directory tree
mk_test_dir($testset,$bench_test);

#using the machine name in LAMMPSMACHINE, execute the make process from within LAMMPS, save the output (or parse it real-time?), and decide if anything bad happened

#check for a makefile corresponding to the current machine ($LAMMPSMACHINE)
(-e "$lammps_dir/src/MAKE/Makefile.$machine") or die "Could not find Makefile.$machine.  Perhaps a LAMMPS env. variable is wrong?\n";

###
# execute make process for LAMMPS
###
system("echo 'Building LAMMPS...'; make -C $lammps_dir/src/ $machine 2>&1;");

# set up the list of things to install and do it
@files = (
	"tools/$testset\*.pl",
	"templates/$testset\*.in",
);

rsync_filelist(\@files,$testset_path);

# install templated utility scripts
install_util_script("tools/start_jobs_jobdirs.pl","$testset_path/lammps\_start_jobs.pl","$testset");
install_util_script("tools/gen_jobs_generic.pl","$testset_path/lammps\_gen_jobs.pl","$testset");
install_util_script("tools/output_parse_generic.pl","$testset_path/$testset\_output_parse.pl","$testset");
install_lammps_files("$testset_path/bench/",$testset); 

# Copy the LAMMPS input and data files to $CBENCHTEST/lammps/bench
lammps_file_substitute();
