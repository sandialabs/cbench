# NOTE: bash syntax is used here

# beginning timestamp of the job
begin_time=`date --iso-8601=seconds`
begin_epoch=`date +%s`
cbench_echo "Cbench start timestamp: $begin_time"

# spit out some other useful Cbench specific details of this job
cbench_echo "Cbench test identifier: IDENT_HERE"
cbench_echo "Cbench CBENCHTEST: CBENCHTEST_HERE"
cbench_echo "Cbench job path: TESTSET_PATH_HERE/IDENT_HERE/JOBNAME_HERE"
cbench_echo "Cbench job script: TESTSET_PATH_HERE/IDENT_HERE/JOBNAME_HERE/JOBSCRIPT_HERE"
cbench_echo "Cbench jobid: $JOBID"

# We don't want to assume that the batch system or whatever will
# put us in the directory we want to be in for the job. So, we
# make sure we are where we expect to be.
cd "TESTSET_PATH_HERE/IDENT_HERE/JOBNAME_HERE"

# set OMP_NUM_THREADS appropriate to the job
export OMP_NUM_THREADS=NUM_THREADS_PER_PROCESS_HERE
cbench_echo "Cbench OMP_NUM_THREADS: $OMP_NUM_THREADS"

# whitepace
cbench_echo ""

# dump out some information on the environment the job is running in for
# posterity
cbench_echo "======= Job Environment Info ========"
# check to see if Modules is being used and if so, list the loaded modules
set | egrep -q '^module.*()$'
if [ $? -eq 0 ]; then
	tmp=`module list 2>&1`
	cbench_echo "$tmp"
cbench_echo ""
fi
# dump some key environmental variables
env | egrep 'LD_LIBRARY_PATH|^PATH|MODULE'

cbench_echo "====================================="
cbench_echo ""


