# vim: syntax=sh tabstop=4
#
# This file contains Cbench common support for the bash based
# job scripts used

#
# Some common routines that Cbench job scripts use to help deal
# with where stdout and stderr output is captured
cbench_run_cmd()
{
	local cmd=$@

	# add stdin file to command line if required
	if [ -n "$STDIN_FILE" ] ; then
		# echo out the command-line we'll exec for posterity
		cbench_echo "Cbench joblaunch cmd line: $cmd < $STDIN_FILE"

		# the simple batch mode case, we don't worry about catching any output
		if [ "$CBENCH_RUN_TYPE" == "BATCH" ]; then
		    $cmd < $STDIN_FILE
			return
		fi

		# the interactive mode case with echoing of the output requested
		if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a "$CBENCH_ECHO_OUTPUT" == "YES" ]; then
		    $cmd < $STDIN_FILE 2>&1 | tee -a $STDOUT_FILE 
			return
		fi

		# the simple interactive mode case with just catching the output to file
		if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a -z "$CBENCH_ECHO_OUTPUT" ]; then
		    $cmd < $STDIN_FILE >> $STDOUT_FILE 2>&1
		fi
	else
		# echo out the command-line we'll exec for posterity
		cbench_echo "Cbench joblaunch cmd line: $cmd"

		# the simple batch mode case, we don't worry about catching any output
		if [ "$CBENCH_RUN_TYPE" == "BATCH" ]; then
		    $cmd
			return
		fi

		# the interactive mode case with echoing of the output requested
		if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a "$CBENCH_ECHO_OUTPUT" == "YES" ]; then
		    $cmd 2>&1 | tee -a $STDOUT_FILE 
			return
		fi

		# the simple interactive mode case with just catching the output to file
		if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a -z "$CBENCH_ECHO_OUTPUT" ]; then
		    $cmd >> $STDOUT_FILE 2>&1
		fi
	fi
}

cbench_echo()
{
	local string=$@

 	# the simple batch mode case, we don't worry about catching any output
    if [ "$CBENCH_RUN_TYPE" == "BATCH" ]; then
	    echo $string
		return
	fi

   	# the interactive mode case with echoing of the output requested
    if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a "$CBENCH_ECHO_OUTPUT" == "YES" ]; then
	    echo $string 2>&1 | tee -a $STDOUT_FILE 
		return
	fi

	# the simple interactive mode case with just catching the output to file
    if [ "$CBENCH_RUN_TYPE" == "INTERACTIVE" -a -z "$CBENCH_ECHO_OUTPUT" ]; then
	    echo $string >> $STDOUT_FILE 2>&1
	fi
}

cbench_runin_tempdir()
{
	# make a uniquely named directory to allow a job to isolate itself
	# from other jobs
	TEMPDIR="job$JOBID"
	mkdir -p $PWD/$TEMPDIR
	cd $TEMPDIR
}
