= Using TAU and Cbench =

''Currently this is a scratch pad for me while I get things working''

21 May 2009 - It looks like TAU can build most of the core Cbench programs and benchmarks.  PAPI events from the list given below can be added and the appropriate $COUNTER env variables set.
 * need a way to manage the profile data generated by runs
   * might need to utilize perfDMF
   * maybe the output parser can utilize a TAU parse module to gather interesting data

Configure command for building TAU
{{{
./configure -pdt=$PDTHOME -arch=x86_64 -mpi -mpiinc=$MPI_INCLUDE -mpilib=$MPI_LIB -papi=$PAPIHOME -prefix=/projects/rkbrait/tau_2.18.2_gcc -pthread -LINUXTIMERS -PAPIWALLCLOCK -PAPIVIRTUAL
./configure -pdt=$PDTHOME -arch=x86_64 -mpi -mpiinc=$MPI_INCLUDE -mpilib=$MPI_LIB -papi=$PAPIHOME -prefix=/projects/rkbrait/tau_2.18.2_pgi -pthread -LINUXTIMERS -PAPIWALLCLOCK -PAPIVIRTUAL -c++=pgCC -cc=pgcc -fortran=pgi -pdt_c++=g++
./configure -pdt=$PDTHOME -arch=x86_64 -mpi -mpiinc=$MPI_INCLUDE -mpilib=$MPI_LIB -papi=$PAPIHOME -prefix=/projects/rkbrait/tau_2.18.2_intel -pthread -LINUXTIMERS -PAPIWALLCLOCK -PAPIVIRTUAL -c++=icpc -cc=icc -fortran=intel -pdt_c++=g++
}}}

for gcc
{{{
module load libraries/papi-3.6.2_gcc-4.1.2

export TAUHOME=/projects/rkbrait/tau_2.18.2_gcc
export TAU_SRCHOME=/projects/rkbrait/cbench_dev/tau_install/tau-2.18.2
export PDTHOME=/projects/rkbrait/pdtoolkit_3.14.1
export PAPIHOME=/apps/x86_64/libraries/papi/gcc-4.1.2/papi-3.6.2
export TAU_MAKEFILE=/projects/rkbrait/cbench_dev/cbench_tlcc/Makefile.tau-cbench
export TAU_PATH=$TAUHOME/x86_64/bin
export TAU_CONFIG=papi-mpi-pthread-pdt

export PATH=$PATH:$TAU_PATH
}}}

for pgi
{{{
export TAU_CONFIG=linuxtimers-multiplecounters-papi-mpi-pthread-pdt-pgi
}}}

for intel
{{{
export TAU_CONFIG=linuxtimers-multiplecounters-mpi-papi-pthread-pdt
}}}

data generated by TAU for a SWEEP3D run on Taco

{{{
 ---------------------------------------------------------------------------------------
 %Time    Exclusive    Inclusive       #Call      #Subrs  Inclusive Name
               msec   total msec                          usec/call 
 ---------------------------------------------------------------------------------------
 100.0         0.91     3:37.619           1           5  217619766 DRIVER 
  99.9        0.187     3:37.490           1           1  217490040 INNER_AUTO 
  99.9           45     3:37.489           1          61  217489853 INNER 
  98.9     3:35.158     3:35.158          12          96   17929912 SWEEP 
   0.8        1,671        1,671          12           0     139332 SOURCE 
   0.2          395          395          12          12      32990 FLUX_ERR 
   0.1          106          216           1           3     216487 INITIALIZE 
   0.1            1          124           1           6     124224 TASK_INIT 
   0.1          122          122           1           0     122511 MPI_Init() 
   0.1          110          110           1           0     110044 INITXS 
   0.0        0.068            3           1           1       3963 TASK_END 
   0.0            3            3           1           0       3895 MPI_Finalize() 
   0.0        0.615        0.618           1           2        618 READ_INPUT 
   0.0        0.393        0.393         104           0          4 OCTANT 
   0.0        0.233        0.373          12          12         31 GLOBAL_INT_SUM 
   0.0        0.205        0.205          32           0          6 MPI_Allreduce() 
   0.0        0.155        0.167           1           8        167 INITSNC 
   0.0          0.1        0.151          12          12         13 GLOBAL_REAL_MAX 
   0.0        0.115         0.14           2           2         70 void timers_() C 
   0.0        0.025        0.039           8           8          5 GLOBAL_REAL_SUM 
   0.0        0.025        0.025           2           0         12 void timers() C 
   0.0        0.011        0.011           1           0         11 DECOMP 
   0.0        0.006        0.006           3           0          2 BARRIER_SYNC 
   0.0        0.006        0.006           1           0          6 MPI_Comm_rank() 
   0.0        0.005        0.005           3           0          2 BCAST_INT 
   0.0        0.003        0.003           1           0          3 INITGEOM 
   0.0        0.001        0.001           1           0          1 BCAST_REAL 
   0.0        0.001        0.001           1           0          1 MPI_Comm_size() 
 ---------------------------------------------------------------------------------------
 
 USER EVENTS Profile :NODE 0, CONTEXT 0, THREAD 0
 ---------------------------------------------------------------------------------------
 NumSamples   MaxValue   MinValue  MeanValue  Std. Dev.  Event Name
 ---------------------------------------------------------------------------------------
         32          8          4        6.5      1.936  Message size for gather
 ---------------------------------------------------------------------------------------
}}}

the following are the events that are countable on TLCC machines.  TAU can be configured to profile any of these for a given run:

{{{
rkbrait@taco1: /projects/rkbrait/cbench_dev/cbench_tlcc_tau_gcc/sweep3d/tau_1/150std-1ppn-1$ papi_avail
Available events and hardware information.
--------------------------------------------------------------------------------
Vendor string and code   : AuthenticAMD (2)
Model string and code    : AMD Family 10h (19)
CPU Revision             : 3.000000
CPU Megahertz            : 1100.000000
CPU Clock Megahertz      : 1100
CPU's in this Node       : 16
Nodes in this System     : 1
Total CPU's              : 16
Number Hardware Counters : 4
Max Multiplex Counters   : 32
--------------------------------------------------------------------------------
The following correspond to fields in the PAPI_event_info_t structure.

    Name        Code    Avail Deriv Description (Note)
PAPI_L1_DCM  0x80000000  Yes   No   Level 1 data cache misses
PAPI_L1_ICM  0x80000001  Yes   No   Level 1 instruction cache misses
PAPI_L2_DCM  0x80000002  Yes   No   Level 2 data cache misses
PAPI_L2_ICM  0x80000003  Yes   No   Level 2 instruction cache misses
PAPI_L1_TCM  0x80000006  Yes   Yes  Level 1 cache misses
PAPI_L2_TCM  0x80000007  Yes   No   Level 2 cache misses
PAPI_L3_TCM  0x80000008  Yes   No   Level 3 cache misses
PAPI_FPU_IDL 0x80000012  Yes   No   Cycles floating point units are idle
PAPI_TLB_DM  0x80000014  Yes   No   Data translation lookaside buffer misses
PAPI_TLB_IM  0x80000015  Yes   No   Instruction translation lookaside buffer misses
PAPI_TLB_TL  0x80000016  Yes   Yes  Total translation lookaside buffer misses
PAPI_STL_ICY 0x80000025  Yes   No   Cycles with no instruction issue
PAPI_HW_INT  0x80000029  Yes   No   Hardware interrupts
PAPI_BR_TKN  0x8000002c  Yes   No   Conditional branch instructions taken
PAPI_BR_MSP  0x8000002e  Yes   No   Conditional branch instructions mispredicted
PAPI_TOT_INS 0x80000032  Yes   No   Instructions completed
PAPI_FP_INS  0x80000034  Yes   No   Floating point instructions
PAPI_BR_INS  0x80000037  Yes   No   Branch instructions
PAPI_VEC_INS 0x80000038  Yes   No   Vector/SIMD instructions
PAPI_RES_STL 0x80000039  Yes   No   Cycles stalled on any resource
PAPI_TOT_CYC 0x8000003b  Yes   No   Total cycles
PAPI_L1_DCH  0x8000003e  Yes   Yes  Level 1 data cache hits
PAPI_L2_DCH  0x8000003f  Yes   Yes  Level 2 data cache hits
PAPI_L1_DCA  0x80000040  Yes   No   Level 1 data cache accesses
PAPI_L2_DCA  0x80000041  Yes   No   Level 2 data cache accesses
PAPI_L1_ICH  0x80000049  Yes   Yes  Level 1 instruction cache hits
PAPI_L2_ICH  0x8000004a  Yes   No   Level 2 instruction cache hits
PAPI_L1_ICA  0x8000004c  Yes   No   Level 1 instruction cache accesses
PAPI_L2_ICA  0x8000004d  Yes   No   Level 2 instruction cache accesses
PAPI_L1_ICR  0x8000004f  Yes   No   Level 1 instruction cache reads
PAPI_L1_TCH  0x80000055  Yes   Yes  Level 1 total cache hits
PAPI_L2_TCH  0x80000056  Yes   Yes  Level 2 total cache hits
PAPI_L1_TCA  0x80000058  Yes   Yes  Level 1 total cache accesses
PAPI_L2_TCA  0x80000059  Yes   No   Level 2 total cache accesses
PAPI_L3_TCR  0x8000005d  Yes   No   Level 3 total cache reads
PAPI_FML_INS 0x80000061  Yes   No   Floating point multiply instructions
PAPI_FAD_INS 0x80000062  Yes   No   Floating point add instructions (Also includes subtract instructions)
PAPI_FDV_INS 0x80000063  Yes   No   Floating point divide instructions (Counts both divide and square root instructions)
PAPI_FSQ_INS 0x80000064  Yes   No   Floating point square root instructions (Counts both divide and square root instructions)
PAPI_FP_OPS  0x80000066  Yes   No   Floating point operations
-------------------------------------------------------------------------
Of 103 possible events, 40 are available, of which 8 are derived.

avail.c                                  PASSED
rkbrait@taco1: /projects/rkbrait/cbench_dev/cbench_tlcc_tau_gcc/sweep3d/tau_1/150std-1ppn-1$ 
}}}

building TAU
 * the trace option might be cool eventually, but I think we'll be more interested in the regular profile behavior
   * it should be fairly easy to change between the two since it's really a matter of which option is specified in the makefile (or so I think)

 	  	 
